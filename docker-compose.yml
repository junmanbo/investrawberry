version: "3.3"
services:
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    image: "postgres:15"
    container_name: "db"
    volumes:
      - "app-db-data:/var/lib/postgresql/data/pgdata"
    env_file:
      - ".env"
    environment:
      - "PGDATA=/var/lib/postgresql/data/pgdata"

  queue:
    image: "rabbitmq:3"
    container_name: "queue"
    env_file:
      - ".env"
    hostname: "queue"

  redis:
    image: "redis:7"
    container_name: "redis"
    env_file:
      - ".env"
  
  backend:
    image: "${DOCKER_USER}/${DOCKER_IMAGE_BACKEND}:latest"
    container_name: "backend"
    depends_on:
      - "db"
    env_file:
      - ".env"
    build:
      context: "./backend"
      dockerfile: "Dockerfile"
    command: "uvicorn app.main:app --host 0.0.0.0 --port 8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.${DOMAIN}`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  celery-worker:
    image: "${DOCKER_USER}/${DOCKER_IMAGE_BACKEND}:latest"
    container_name: "celery-worker"
    depends_on:
      - "db"
      - "queue"
      - "redis"
    env_file:
      - ".env"
    command: "celery -A app.worker worker -l info"

  flower:
    image: "${DOCKER_USER}/${DOCKER_IMAGE_BACKEND}:latest"
    container_name: "flower"
    depends_on:
      - "celery-worker"
    env_file:
      - ".env"
    command: "celery -A app.worker flower \
              --basic-auth=${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS} \
              --broker=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@queue:5672//"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flower.rule=Host(`flower.${DOMAIN}`)"
      - "traefik.http.routers.flower.entrypoints=web"
      - "traefik.http.services.flower.loadbalancer.server.port=5555"

  price-feed:
    image: "${DOCKER_USER}/${DOCKER_IMAGE_BACKEND}:latest"
    container_name: "price-feed"
    depends_on:
      - "redis"
    env_file:
      - ".env"
    command: "python3 price_feed/get_price.py"

  frontend:
    image: "${DOCKER_USER}/${DOCKER_IMAGE_FRONTEND}:latest"
    container_name: "frontend"
    env_file:
      - "./frontend/.env"
    build:
      context: "./frontend"
      dockerfile: "Dockerfile"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`tutong.${DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
volumes:
  app-db-data:
